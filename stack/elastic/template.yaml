AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Description: >
  SAM Template for elastic event store

Metadata:
  AWS::ServerlessRepo::Application:
    Name: elastic-event-store
    Description: Elastic Event Store on top of DynamoDB
    Author: Reda Laanait
    SpdxLicenseId: MIT
    LicenseUrl: ../../LICENSE.txt
    ReadmeUrl: ../../README.md
    Labels: ['event-store', 'event-sourcing', 'ddd', 'dynamodb', 'serverless', 'go']
    HomePageUrl: https://github.com/ln80/event-store
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/ln80/event-store

Parameters:
  Name:
    Type: String
    MinLength: '3'
    Description: |
      Serverless application name mainly used as prefix for its under resource names.

  DynamoDBBillingMode:
    Type: String
    Default: PAY_PER_REQUEST
    AllowedValues:
      - PROVISIONED
      - PAY_PER_REQUEST
  
  DynamoDBReadCapacity:
    Type: Number
    Default: 0
  
  DynamoDBWriteCapacity:
    Type: Number
    Default: 0
  
  ForwardSNSTopicArn:
    Type: String
    Default: ""
    Description: |
      SNS topic ARN to forward events to.

  BatchRecordEnabled:
    Type: String
    Default: "false"
    AllowedValues:
      - "false"
      - "true"
    Description: |
      BatchRecordEnabled indicates wether or not record events have to be published in a single message or as batch.

  EncodingFormat:
    Type: String
    Default: "JSON"
    AllowedValues:
      - "JSON"
      - "AVRO"
    Description: |
      EncodingFormat of events. It should be changed. Otherwise this might create some inconsistencies.

  RetainResource:
    Type: String
    Default: "false"
    AllowedValues:
      - "false"
      - "true"
    Description: |
      RetainResource indicates if the Event Store table is subject to deletion or not.

  Tracing:
    Type: String
    Default: "Disabled"
    AllowedValues:
      - "Disabled"
      - "Active"
    Description: |
      Tracing enable or disable x-ray tracing for Lambda functions.

  VerbosityLevel: 
    Type: Number
    Default: 1
    Description: |
      VerbosityLevel number define the max log verbosity level, e.g, '0' for Info only, '1' to include debug, or '-1' to disable cloudwatch logging.

  FeatureTogglesConfigurationPath:
    Type: String
    Default: ""

  IndexerDeadLetterTopicArn: 
    Type: String

  ForwarderDeadLetterTopicArn: 
    Type: String

  EmergencyRedirectFifoTopicArn: 
    Type: String
    Default: ""
    Description: |
      A SNS Fifo Topic ARN used by indexer and forwarder to redirect events to
      when indexing or forwarding are disabled by feature toggles.
  
Rules:
  ValidateEmergencyRedirectTopic:
    RuleCondition: !Not
        - !Equals 
          - !Ref FeatureTogglesConfigurationPath
          - ""
    Assertions:
      - Assert: !Not 
        - !Equals 
          - !Ref EmergencyRedirectFifoTopicArn
          - ""
        AssertDescription: |
          Emergency Redirect Fifo Topic is mandatory if Feature toggles configuration path is provided.

Conditions:
  MustEnableFeatureToggles:
    !Not
      - !Equals
        - !Ref FeatureTogglesConfigurationPath
        - ''

  MustDisableCloudWatchLogging:
    !Equals
      - !Ref VerbosityLevel
      - -1
  
  MustUseIndexerDeadLetter:
    !Not
      - !Equals
        - !Ref IndexerDeadLetterTopicArn
        - ''
  MustUseForwarderDeadLetter:
    !Not
      - !Equals
        - !Ref ForwarderDeadLetterTopicArn
        - ''
  MustForward:
    !Not
      - !Equals
        - ''
        - !Ref ForwardSNSTopicArn
  
  MustRetainResource:
    !Equals
      - !Ref RetainResource
      - "true"

  MustUseAvro:
    !Equals
      - !Ref EncodingFormat
      - "AVRO"

Globals:
  Function:
    Timeout: 5
    Runtime: provided.al2
    Handler: bootstrap
    Architectures: [ arm64 ]
    Tracing: !Ref Tracing
    ReservedConcurrentExecutions: 10
    Environment:
      Variables:
        DYNAMODB_TABLE: !Ref EventTable
        VERBOSITY_LEVEL: !Ref VerbosityLevel
        ENCODING_FORMAT: !Sub 
                - "{{resolve:ssm:${ParameterName}}}"
                - { ParameterName: !Ref EncodingFormatParameter }
        # AVRO_GLUE_SCHEMA_REGISTRY: !Ref AvroGlueSchemaRegistryName
        AVRO_GLUE_SCHEMA_REGISTRY: !If 
          - MustUseAvro 
          - !Sub ${Name}-event-schema-registry
          - ""
        FEATURE_TOGGLES_CONFIG_PATH: !Ref FeatureTogglesConfigurationPath
        EMERGENCY_REDIRECT_FIFO_TOPIC:  !Ref EmergencyRedirectFifoTopicArn

Resources:
  EncodingFormatParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${Name}/event-encoding-format
      Type: String
      Value: !Ref EncodingFormat
      Description: Events encoding format. It should not be updated after stack creation.
      AllowedPattern: "^[a-zA-Z]{1,10}$"

  SchemaRegistry:
    Type: 'AWS::Glue::Registry'
    Condition: MustUseAvro
    Properties:
      Description: 'Event Schema Registry'
      Name: !Sub ${Name}-event-schema-registry

  EventTable:
    Type: AWS::DynamoDB::Table
    # DeletionPolicy: !If
    #   - "MustRetainResource"
    #   - "RetainExceptOnCreate" 
    #   - "Delete"
    Properties:
        DeletionProtectionEnabled: !If
          - "MustRetainResource"
          - true
          - false
        TableName: !Sub ${Name}-table
        AttributeDefinitions:
          -
            AttributeName: _pk
            AttributeType: S
          -
            AttributeName: _sk
            AttributeType: S
          -
            AttributeName: _lsik
            AttributeType: S
        KeySchema:
          -
            AttributeName: _pk
            KeyType: HASH
          -
            AttributeName: _sk
            KeyType: RANGE
        LocalSecondaryIndexes:
          - 
            IndexName: _lsi
            KeySchema:
              - 
                AttributeName: _pk
                KeyType: HASH
              - 
                AttributeName: _lsik
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
        TimeToLiveSpecification:
            AttributeName: _ttl
            Enabled: true
        BillingMode: !Ref DynamoDBBillingMode
        ProvisionedThroughput:
          ReadCapacityUnits: !Ref DynamoDBReadCapacity
          WriteCapacityUnits: !Ref DynamoDBWriteCapacity
        StreamSpecification:
          StreamViewType: NEW_IMAGE

  # LAMBDA FUNCTIONS:
  
  IndexerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      FunctionName: !Sub ${Name}-Indexer
      CodeUri: indexer/
      Events:
        StreamEvent:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt EventTable.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            BisectBatchOnFunctionError: false
            ParallelizationFactor: 1
            MaximumRetryAttempts: 1000
            DestinationConfig:
                OnFailure:
                  Destination: !Ref IndexerDeadLetterTopicArn

            FilterCriteria:
              Filters:
                - Pattern: '{"eventName": ["INSERT"], "dynamodb": { "Keys" : {"_pk": {"S": [{"anything-but": [ "internal" ]}]}}}}'
      Policies:
        - AWSLambdaDynamoDBExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref EventTable
        - !If
            - MustDisableCloudWatchLogging
            - Version: '2012-10-17'
              Statement:
                - Effect: Deny
                  Action:
                    - 'logs:CreateLogGroup'
                    - 'logs:CreateLogStream'
                    - 'logs:PutLogEvents'
                  Resource: arn:aws:logs:*:*:*
            - !Ref AWS::NoValue
        - !If 
            - MustUseIndexerDeadLetter
            - Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'sns:Publish'
                  Resource: !Ref IndexerDeadLetterTopicArn
            - !Ref AWS::NoValue
       
  ForwarderFunction:
      Type: AWS::Serverless::Function
      Condition: MustForward
      Metadata:
        BuildMethod: go1.x
      Properties:
        FunctionName: !Sub ${Name}-Forwarder
        CodeUri: forwarder/
        Events:
          StreamEvent:
            Type: DynamoDB
            Properties:
              Stream: !GetAtt EventTable.StreamArn
              StartingPosition: TRIM_HORIZON
              BatchSize: 1
              BisectBatchOnFunctionError: false
              ParallelizationFactor: 1
              # MaximumRecordAgeInSeconds: -1
              # MaximumRetryAttempts: -1
              MaximumRetryAttempts: 1000
              DestinationConfig:
                  OnFailure:
                    Destination: !Ref ForwarderDeadLetterTopicArn
              FilterCriteria:
                Filters:
                  - Pattern: '{"eventName": ["MODIFY"], "dynamodb": { "Keys" : {"_pk": {"S": [{"anything-but": [ "internal" ]}]}}}}'
        Policies:
          - AWSLambdaDynamoDBExecutionRole
          - Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource: !Ref ForwardSNSTopicArn
          - !If
            - MustDisableCloudWatchLogging
            - Version: '2012-10-17'
              Statement:
                - Effect: Deny
                  Action:
                    - 'logs:CreateLogGroup'
                    - 'logs:CreateLogStream'
                    - 'logs:PutLogEvents'
                  Resource: arn:aws:logs:*:*:*
            - !Ref AWS::NoValue
          - !If
            - MustUseForwarderDeadLetter
            - Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'sns:Publish'
                  Resource: !Ref ForwarderDeadLetterTopicArn
            - !Ref AWS::NoValue
          - !If
            - MustUseAvro
            # - AWSGlueSchemaRegistryReadonlyAccess
            - Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "glue:GetRegistry"
                    - "glue:ListRegistries"
                    - "glue:GetSchema"
                    - "glue:ListSchemas"
                    - "glue:GetSchemaByDefinition"
                    - "glue:GetSchemaVersion"
                    - "glue:ListSchemaVersions"
                    - "glue:GetSchemaVersionsDiff"
                    - "glue:CheckSchemaVersionValidity"
                    - "glue:QuerySchemaVersionMetadata"
                    - "glue:GetTags"
                  Resource: "*"
            - !Ref AWS::NoValue
        Environment:
            Variables:
              SNS_TOPIC: !Ref ForwardSNSTopicArn
              BATCH_RECORD_ENABLED: !Ref BatchRecordEnabled

  FeatureTogglesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: MustEnableFeatureToggles
    Properties:
      Description: Grant Access to Feature Toggles Configuration and Emergency Redirect SNS TOPIC
      ManagedPolicyName: !Sub ${Name}-FeatureTogglesPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
                    - appconfig:GetLatestConfiguration
                    - appconfig:StartConfigurationSession
            Resource: !Sub 
                    - 'arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:${ConfigPath}'
                    - { ConfigPath: !Ref FeatureTogglesConfigurationPath }
          - Effect: Allow
            Action:
                    - 'sns:Publish'
            Resource: !Ref EmergencyRedirectFifoTopicArn
      Roles: 
        - !Ref IndexerFunctionRole
        - !If 
          - MustForward
          - !Ref ForwarderFunctionRole
          - !Ref AWS::NoValue

Outputs:
  EventTable:
    Description: "Dynamodb Event Table"
    Value: !Ref EventTable

  IndexerFunctionName:
    Description: "Indexer Lambda function"
    Value: !Ref IndexerFunction

  ForwardFunctionName:
    Description: "Forwarder Lambda function"
    Value: !If 
          - MustForward
          - !Ref ForwarderFunctionRole
          - ""

  AvroSchemaRegistry:
      Description: "Avro Schema registry"
      Value: !If 
        - MustUseAvro
        - !Sub ${Name}-event-schema-registry
        - ""