AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-appconfig

  Sample SAM Template for sam-appconfig

Parameters:
  AppConfigAppName:
    Type: String
    Description: AppConfig Application Name
    Default: appconfig-feature-flag-sam
  AppConfigAppEnvironmentName:
    Type: String
    Description: AppConfig Application Environment Name
    Default: dev
  AppConfigName:
    Type: String
    Description: AppConfig Name
    Default: TestConfig
  AppConfigLayerArn:
    Type: String
    Description: Retrieve AWS AppConfig Lambda extension arn from `https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-integration-lambda-extensions-versions.html#appconfig-integration-lambda-extensions-enabling-x86-64`
    Default: arn:aws:lambda:us-east-1:027255383542:layer:AWS-AppConfig-Extension:82

Globals:
  Function:
    Timeout: 3

Resources:
  
  ## AppConfig FeatureFlag
  SAMConfigApplication:
      Type: AWS::AppConfig::Application
      Properties:
        Name: !Ref AppConfigAppName
  
  Environment:
    Type: AWS::AppConfig::Environment
    Properties:
      Name: !Ref AppConfigAppEnvironmentName
      ApplicationId: !Ref SAMConfigApplication
  
  SAMConfigConfigurationProfile:
    Type: AWS::AppConfig::ConfigurationProfile
    Properties:
      ApplicationId: !Ref SAMConfigApplication
      Name: !Ref AppConfigName
      Type: "AWS.AppConfig.FeatureFlags"
      LocationUri: "hosted"

  SAMConfigDeploymentStrategy:
    Type: AWS::AppConfig::DeploymentStrategy
    Properties:
      Name: "SAMConfigDeploymentStrategy"
      Description: "A deployment strategy to deploy the config immediately"
      DeploymentDurationInMinutes: 0
      FinalBakeTimeInMinutes: 0
      GrowthFactor: 100
      GrowthType: LINEAR
      ReplicateTo: NONE

  BasicHostedConfigurationVersion:
    Type: AWS::AppConfig::HostedConfigurationVersion
    Properties:
      ApplicationId: !Ref SAMConfigApplication
      ConfigurationProfileId: !Ref SAMConfigConfigurationProfile
      Description: 'A sample hosted configuration version'
      ContentType: 'application/json'
      Content: |
        {
          "version":"1",
          "flags":
          {
            "pagination":
              {
                "name":"AppPagination",
                "attributes":
                {
                  "pageSize":
                  {
                      "constraints":
                      {
                        "type":"number",
                        "required":false,
                        "minimum":5,
                        "maximum":10
                      }
                  }
                }
              },
              "wizardSwitch":
              {
                "name":"WizardSwitch"
              }
          },
          "values":
          {
            "pagination":
            {
              "enabled":true,
              "pageSize":5
            },
            "wizardSwitch":
            {
              "enabled":true
            }
          }
        }

  AppConfigDeployment:
    Type: AWS::AppConfig::Deployment
    Properties:
      ApplicationId: !Ref SAMConfigApplication
      ConfigurationProfileId: !Ref SAMConfigConfigurationProfile
      ConfigurationVersion: !Ref BasicHostedConfigurationVersion
      DeploymentStrategyId: !Ref SAMConfigDeploymentStrategy
      EnvironmentId: !Ref Environment

  ## API
  HttpApi:
    Type: AWS::Serverless::HttpApi

  ## Lambda
  SAMConfigFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
      Architectures:
        - x86_64
      
      Layers:
        - arn:aws:lambda:us-east-1:027255383542:layer:AWS-AppConfig-Extension:82
      
      ## The following policy shows how to restrict the function access to the specific configuration/environment.
      ## This can be relaxed, allowing it to access the entire application or application/environment
      Policies:        
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - appconfig:GetLatestConfiguration
                - appconfig:StartConfigurationSession
              Resource: !Sub 'arn:aws:appconfig:${AWS::Region}:${AWS::AccountId}:application/${SAMConfigApplication}/environment/${Environment}/configuration/${SAMConfigConfigurationProfile}'
      
      Environment:
        Variables:
          SAM_CONFIG_PATH: !Sub '/applications/${AppConfigAppName}/environments/${AppConfigAppEnvironmentName}/configurations/${AppConfigName}'

      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            Path: /config
            Method: get
            ApiId: !Ref HttpApi

    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
        - app.ts

Outputs:
  SAMConfigApplication:
    Description: Application Id
    Value: !Ref SAMConfigApplication
  Environment:
    Description: Environment
    Value: !Ref Environment
  SAMConfigConfigurationProfile:
    Description: ConfigurationProfile
    Value: !Ref SAMConfigConfigurationProfile
  ConfigPath:
    Description: Configuration Path
    Value: !Sub '/applications/${AppConfigAppName}/environments/${AppConfigAppEnvironmentName}/configurations/${AppConfigName}'
  HttpApiUrl:
    Description: URL of your API endpoint
    Value:
      Fn::Sub: 'https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/'
  HttpApiId:
    Description: Api id of HttpApi
    Value:
      Ref: HttpApi


  EmergencyTogglesConfigApp:
    Type: AWS::AppConfig::Application
    Properties:
      Name: !Sub ${Name}-emergency-toggles

  EmergencyTogglesConfigProfile:
    Type: AWS::AppConfig::ConfigurationProfile
    Properties:
      ApplicationId: !Ref EmergencyTogglesConfigApp
      LocationUri: hosted
      Name: !Sub ${Name}-emergency-toggles-profile
      Validators:
        - Content: |
            { "$schema": "http://json-schema.org/draft-04/schema#", "type": "object", "properties": { "isEnabled": { "type": "boolean" }, "messageOption": { "type": "string", "minimum": 0 } }, "required": ["isEnabled", "messageOption"] }
          Type: JSON_SCHEMA
  EmergencyTogglesEnvironment:
    Type: AWS::AppConfig::Environment
    Properties:
      ApplicationId: !Ref EmergencyTogglesConfigApp
      Name: elastic_backend
  
  EmergencyTogglesInitialConfigVersion:
    Type: AWS::AppConfig::HostedConfigurationVersion
    Properties:
      ApplicationId: !Ref EmergencyTogglesConfigApp
      ConfigurationProfileId: !Ref EmergencyTogglesConfigProfile
      ContentType: application/json
      # Initial config
      Content:
        !ToJsonString:
          Default:
            Indexing: "On"
            Forwarding: "On"
            Appending: "On" 
          Streams: []
  
  EmergencyTogglesInitialDeployment:
    Type: AWS::AppConfig::Deployment
    Properties:
      ApplicationId: !Ref EmergencyTogglesConfigApp
      ConfigurationProfileId: !Ref EmergencyTogglesConfigProfile
      ConfigurationVersion: !Ref EmergencyTogglesInitialConfigVersion
      EnvironmentId: !Ref EmergencyTogglesEnvironment
      DeploymentStrategyId: AppConfig.AllAtOnce


Mappings:
  Mappings:
    AppConfigLayer: 
      us-east-1:
        ARN: arn:aws:lambda:us-east-1:027255383542:layer:AWS-AppConfig-Extension:1
      us-east-2:
        ARN: arn:aws:lambda:us-east-2:728743619870:layer:AWS-AppConfig-Extension:1
      us-west-1:
        ARN: arn:aws:lambda:us-west-1:958113053741:layer:AWS-AppConfig-Extension:1
      us-west-2:
        ARN: arn:aws:lambda:us-west-2:359756378197:layer:AWS-AppConfig-Extension:1
      ca-central-1:
        ARN: arn:aws:lambda:ca-central-1:039592058896:layer:AWS-AppConfig-Extension:1
      eu-central-1:
        ARN: arn:aws:lambda:eu-central-1:066940009817:layer:AWS-AppConfig-Extension:1
      eu-west-1:
        ARN: arn:aws:lambda:eu-west-1:434848589818:layer:AWS-AppConfig-Extension:1
      eu-west-2:
        ARN: arn:aws:lambda:eu-west-2:282860088358:layer:AWS-AppConfig-Extension:1
      eu-west-3:
        ARN: arn:aws:lambda:eu-west-3:493207061005:layer:AWS-AppConfig-Extension:1
      eu-north-1:
        ARN: arn:aws:lambda:eu-north-1:646970417810:layer:AWS-AppConfig-Extension:1
      eu-south-1:
        ARN: arn:aws:lambda:eu-south-1:203683718741:layer:AWS-AppConfig-Extension:1
      ap-east-1:
        ARN: arn:aws:lambda:ap-east-1:630222743974:layer:AWS-AppConfig-Extension:1
      ap-northeast-1:
        ARN: arn:aws:lambda:ap-northeast-1:980059726660:layer:AWS-AppConfig-Extension:1
      ap-northeast-2:
        ARN: arn:aws:lambda:ap-northeast-2:826293736237:layer:AWS-AppConfig-Extension:1
      ap-southeast-1:
        ARN: arn:aws:lambda:ap-southeast-1:421114256042:layer:AWS-AppConfig-Extension:1
      ap-southeast-2:
        ARN: arn:aws:lambda:ap-southeast-2:080788657173:layer:AWS-AppConfig-Extension:1
      ap-south-1:
        ARN: arn:aws:lambda:ap-south-1:554480029851:layer:AWS-AppConfig-Extension:1
      sa-east-1:
        ARN: arn:aws:lambda:sa-east-1:000010852771:layer:AWS-AppConfig-Extension:1
      af-south-1:
        ARN: arn:aws:lambda:af-south-1:574348263942:layer:AWS-AppConfig-Extension:1
      me-south-1:
        ARN: arn:aws:lambda:me-south-1:559955524753:layer:AWS-AppConfig-Extension:1




  IndexerCloudWatchAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: MustEnableAlarm
    Properties:
      ActionsEnabled: true
      AlarmDescription: !Sub 'Indexing global stream is facing issues'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Name}-Indexer
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 30
      Statistic: Sum
      Threshold: 1
      AlarmActions:
        - !Ref AlarmSNSTopicArn



         # IndexerDeadLetterQueue:
  #   Type: AWS::SQS::Queue
  #   Properties:
  #       QueueName: !Sub ${Name}-indexer-dlq
  #       MessageRetentionPeriod: 1209600 # 14 days
  #       ReceiveMessageWaitTimeSeconds: 20
  #       VisibilityTimeout: 180

  # ForwarderDeadLetterQueue:
  #   Type: AWS::SQS::Queue
  #   Properties:
  #       QueueName: !Sub ${Name}-forwarder-dlq
  #       MessageRetentionPeriod: 1209600 # 14 days
  #       ReceiveMessageWaitTimeSeconds: 20
  #       VisibilityTimeout: 180