name: Elastic Stack

on:
  push:
    tags:
      - 'stack/elastic/v[0-9]+.[0-9]+.*'
    branches: [main]
    paths:
      - 'stack/elastic/**'
  pull_request:
    branches: [main]
    paths:
      - 'stack/elastic/**'

# defaults:
#   run:
    # working-directory: stacks/elastic

jobs:
  cfn-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Validate SAM template
        working-directory: ./stack/elastic
        run: |
          make elastic/validate
    
      - uses: stelligent/cfn_nag@master
        # working-directory: ./stack/elastic
        with:
          input_path: stack/elastic
  
  unit-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: stack/elastic
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21.x" 
      
      - name: Install Go Dependencies
        run: |
          go mod tidy

      - name: Run unit tests
        working-directory: ./stack/elastic
        run: |
          make elastic/unit-test/run
      
  integ-test:
    environment: test
    needs: [ unit-test, cfn-test ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: stack/elastic
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21.x" 
      
      - name: Install Go Dependencies
        run: |
          go mod tidy

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Generate integ test stackname
        run: echo STACK_NAME=storer-elastic-test-$(date +%s) >> $GITHUB_ENV
      
      - name: Display integ test stackname
        run: echo ${{ env.STACK_NAME }}

      - name: Build integ tests
        run: |
          make elastic/integ-test/build

      - name: Deploy integ tests
        run: |
          make elastic/integ-test/deploy

      - name: Run integ tests
        run: |
          make elastic/integ-test/run

      - name: Clear integ tests
        run: |
          make elastic/integ-test/clear

  release:
    needs: [ integ-test ]
    if: startsWith(github.ref, 'refs/tags/stack/elastic/v')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: stack/elastic
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21.x" 
      
      - name: Install Go Dependencies
        run: |
          go mod tidy

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Set RELEASE_VERSION ENV var
        run: echo "RELEASE_VERSION=${GITHUB_REF:15}" >> $GITHUB_ENV
      
      - name: Build
        run: |
          make elastic/build

      - name: Package
        run: |
          make elastic/package

      - name: Publish to SAR
        env:
          ELASTIC_VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          make elastic/publish v="${ELASTIC_VERSION}"